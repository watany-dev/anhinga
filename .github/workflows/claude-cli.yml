name: Claude Assistant
on:
  issue_comment:
    types: [created]

jobs:
  claude-assistant:
    if: >
      github.event.issue.user.login == 'watany-dev' &&
      contains(github.event.comment.body, '@cli-claude')
    runs-on: ubuntu-latest
    env:
      CLAUDE_CODE_USE_BEDROCK: 1
      ANTHROPIC_MODEL: us.anthropic.claude-sonnet-4-20250514-v1:0
      GH_TOKEN: ${{ github.token }}
      GITHUB_TOKEN: ${{ github.token }}
    permissions:
      id-token: write
      contents: read
      pull-requests: read
      checks: read
      issues: read
      security-events: read
      statuses: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-west-2
          role-duration-seconds: 3600
          role-session-name: GitHubActions${{ github.run_id }}
          mask-aws-account-id: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Install Claude CLI
        run: |
          npm install -g @anthropic-ai/claude-code --force --no-os-check
          claude --version
          claude config set hasTrustDialogAccepted true
          claude config add allowedTools mcp__GitHub__add_pull_request_review_comment
          claude config add allowedTools mcp__GitHub__create_pull_request_review
          claude config add allowedTools mcp__GitHub__enable_toolset
          claude config add allowedTools mcp__GitHub__get_pull_request
          claude config add allowedTools mcp__GitHub__get_pull_request_files
          claude config add allowedTools mcp__GitHub__get_pull_request_status
          claude config add allowedTools mcp__GitHub__get_pull_request_reviews
          claude config add allowedTools mcp__GitHub__get_pull_request_comments
          claude config add allowedTools mcp__GitHub__get_toolset_tools
          claude config add allowedTools mcp__GitHub__list_available_toolsets
          claude config add allowedTools mcp__GitHub__list_pull_requests
          claude config add allowedTools Bash
          claude config add allowedTools Read
          claude config add allowedTools Write
          claude config add allowedTools Edit
          claude config add allowedTools Create
          claude config add allowedTools gh
          claude mcp add-json --scope "project" "GitHub" '{"type":"stdio","command":"docker","args":["run","--rm","--interactive","--env","GITHUB_PERSONAL_ACCESS_TOKEN","--env","GITHUB_DYNAMIC_TOOLSETS","--env","GITHUB_TOOLSETS","ghcr.io/github/github-mcp-server"],"env":{"GITHUB_PERSONAL_ACCESS_TOKEN":"${{ env.GITHUB_PERSONAL_ACCESS_TOKEN }}","GITHUB_TOOLSETS":"${{ env.GITHUB_TOOLSETS }}","GITHUB_DYNAMIC_TOOLSETS":"${{ env.GITHUB_DYNAMIC_TOOLSETS }}"}}'


      - name: Process Comment with Claude
        run: |
          FULL_BODY="${{ github.event.comment.body }}"
          # @cli-claude 以降のテキストを抽出
          CLAUDE_PROMPT=$(echo "$FULL_BODY" | sed -E 's/.*@cli-claude[[:space:]]*//')

          # 空ならデフォルトを設定
          if [ -z "$CLAUDE_PROMPT" ]; then
            CLAUDE_PROMPT="Please help me with this issue or pull request."
          fi

          # Claude CLI 実行
          echo "$CLAUDE_PROMPT" | claude \
            --allowedTools "mcp__GitHub__add_pull_request_review_comment,mcp__GitHub__create_pull_request_review,mcp__GitHub__enable_toolset,mcp__GitHub__get_pull_request,mcp__GitHub__get_pull_request_files,mcp__GitHub__get_pull_request_status,mcp__GitHub__get_pull_request_reviews,mcp__GitHub__get_pull_request_comments,mcp__GitHub__get_toolset_tools,mcp__GitHub__list_available_toolsets,mcp__GitHub__list_pull_requests,Bash,Read,Write,Edit,Create,gh" \
            --mcp-debug \
            --mcp-config .mcp.json \
            --print --output-format json | tee output.json
          cat output.json |  jq -r '.result' > response.txt
     
      - name: Post the response as a comment
        run: |
          if [ ! -s response.txt ]; then
            echo "⚠️ Claude の result が空なのでスキップします。"
            exit 0
          fi

          # --body-file でファイル丸ごと渡す
          gh issue comment ${{ github.event.issue.number }} --body-file response.txt

          # GitHub にコメントを投稿
          gh issue comment ${{ github.event.issue.number }} --body "$RESPONSE"
